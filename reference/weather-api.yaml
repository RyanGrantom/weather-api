openapi: 3.1.0
info:
  title: weather-api
  version: '1.0'
  description: Grabs weather information for various specified cities
servers:
  - url: 'localhost:3000'
paths:
  /weather:
    get:
      summary: List Cities Weather
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/200'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-weather
      security: []
      parameters:
        - $ref: '#/components/parameters/limit'
      description: Returns a list of weather conditions in various cities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
        description: ''
    post:
      summary: ''
      operationId: add-city
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
      description: Adds city to list of weather results
  '/weather/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
    post:
      summary: ''
      operationId: post-weather-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: adds a city to the list to request weather for
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
    put:
      summary: ''
      operationId: put-weather-id
      responses:
        '200':
          description: OK
      description: ''
    delete:
      summary: ''
      operationId: delete-weather-id
      responses:
        '200':
          description: OK
components:
  schemas:
    Weather:
      title: Weather
      type: object
      properties:
        id:
          type: number
          readOnly: true
        city:
          type: string
        zipcode:
          type: number
        weather:
          type: string
          readOnly: true
        completed:
          type: boolean
          default: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - city
        - zipcode
      description: model for weather requests in cities specifed by zipcode
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
  parameters:
    limit:
      name: limit
      in: query
      schema:
        type: string
      description: Return a list of results
  responses:
    '200':
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Weather'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ./Error-1.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: ./Error-1.yaml
  requestBodies:
    City:
      content:
        application/json:
          schema:
            type: object
            properties:
              city:
                type: string
              zipcode:
                type: number
              weather:
                type: number
                readOnly: true
            required:
              - city
              - zipcode
security:
  - API Key - 1: []
