openapi: 3.1.0
info:
  title: weather-api
  version: '1.0'
  description: Grabs weather information for various specified cities
  contact:
    name: Ryan
    email: grantom.ryan@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  /weather:
    get:
      summary: List Cities Weather
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-weather-all-cities
      security: []
      parameters:
        - $ref: '#/components/parameters/limit'
      description: Returns a list of weather conditions in various cities
    post:
      summary: Add City
      operationId: add-city
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
          headers: {}
        '401':
          $ref: '#/components/responses/401'
      description: Adds city to list of weather results
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
            examples:
              Request Example:
                value:
                  rank: 0
                  city: string
                  zipcode: 77389
                  weather: Cloudy
                  degrees: 95
                  unit: fahrenheit
                  completed: true
                  created_at: '2019-08-24T14:15:22Z'
                  completed_at: '2019-08-24T14:15:22Z'
                  updated_at: '2019-08-24T14:15:22Z'
        description: 'Request to add city with city, state, and zipcode'
      parameters:
        - $ref: '#/components/parameters/contentType'
    put:
      summary: Update City
      operationId: update-city
      responses:
        '200':
          description: OK
      description: Update City
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
    delete:
      summary: Delete City
      operationId: delete-city
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
      description: Remove city
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weather'
  '/weather/{zipcode}':
    parameters:
      - $ref: '#/components/parameters/zipcode'
    get:
      summary: Get Single City Weather
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-weather-zipcode
      description: This gets the weather conditions for a single city based on zipcode
components:
  schemas:
    Weather:
      type: object
      title: Weather
      description: model for weather requests in cities specifed by zipcode
      examples:
        - rank: 0
          city: string
          zipcode: 77389
          weather: Cloudy
          degrees: 95
          unit: fahrenheit
          completed: true
          created_at: '2019-08-24T14:15:22Z'
          completed_at: '2019-08-24T14:15:22Z'
          updated_at: '2019-08-24T14:15:22Z'
      properties:
        rank:
          type: number
          readOnly: true
        city:
          type: string
          example: Spring
        state:
          type: string
          example: Texas
        zipcode:
          type: number
          example: 77389
        weather:
          type: string
          example: Cloudy
          enum:
            - Cloudy
            - Sunny
            - Rainy
            - Foggy
            - Partially Cloudy
          readOnly: true
        degrees:
          type: number
          example: 95
          readOnly: true
        unit:
          oneOf:
            - enum:
                - celsius
                - fahrenheit
              behavior: Read Only
              example: fahrenheit
          type: string
        completed:
          type: boolean
          default: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - zipcode
      readOnly: true
      x-internal: false
  securitySchemes:
    '123123123':
      name: API Key
      type: apiKey
      in: query
  parameters:
    limit:
      name: limit
      in: query
      schema:
        type: string
      description: Return a list of results
    contentType:
      name: Content-Type
      in: header
      required: false
      schema:
        type: string
      description: application/json
    zipcode:
      name: zipcode
      in: path
      required: true
      schema:
        type: number
        format: float
        example: 77389
      description: zipcode of city
  responses:
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ./Error.yaml
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: ./Error.yaml
  requestBodies: {}
security:
  - API Key - 1: []
